#ifndef INSTRUCTION_SET_H
#define INSTRUCTION_SET_H

typedef enum
{
    MOV8_RR     = 0x0000000000000010,
    MOV8_IR     = 0x0000000000000018,

    AND8        = 0x0000000000000020,
    OR8         = 0x0000000000000021,
    XOR8        = 0x0000000000000022,
    NOT8        = 0x0000000000000023,
    NAND8       = 0x0000000000000024,
    NOR8        = 0x0000000000000025,
    XNOR8       = 0x0000000000000026,
    SHL8        = 0x0000000000000027,
    SHR8        = 0x0000000000000028,

    ADD8        = 0x0000000000000030,
    SADD8       = 0x0000000000000031,
    SUB8        = 0x0000000000000032,
    SSUB8       = 0x0000000000000033,
    MUL8        = 0x0000000000000034,
    SMUL8       = 0x0000000000000035,
    DIV8        = 0x0000000000000036,
    SDIV8       = 0x0000000000000037,
    MOD8        = 0x0000000000000038,
    SMOD8       = 0x0000000000000039,
    INC8        = 0x000000000000003A,
    DEC8        = 0x000000000000003B,

    CMP8        = 0x0000000000000040,
} opcode_8b;

typedef enum
{
    MOV16_RR    = 0x0000000000001000,
    MOV16_IR    = 0x0000000000001100,

    AND16       = 0x0000000000002000,
    OR16        = 0x0000000000002100,
    XOR16       = 0x0000000000002200,
    NOT16       = 0x0000000000002300,
    NAND16      = 0x0000000000002400,
    NOR16       = 0x0000000000002500,
    XNOR16      = 0x0000000000002600,
    SHL16       = 0x0000000000002700,
    SHR16       = 0x0000000000002800,

    ADD16       = 0x0000000000003000,
    SADD16      = 0x0000000000003100,
    SUB16       = 0x0000000000003200,
    SSUB16      = 0x0000000000003300,
    MUL16       = 0x0000000000003400,
    SMUL16      = 0x0000000000003500,
    DIV16       = 0x0000000000003600,
    SDIV16      = 0x0000000000003700,
    MOD16       = 0x0000000000003800,
    SMOD16      = 0x0000000000003900,
    INC16       = 0x0000000000003A00,
    DEC16       = 0x0000000000003B00,

    CMP16       = 0x0000000000004000,
} opcode_16b;

typedef enum
{
    MOV32_RR    = 0x0000000010000000,
    MOV32_IR    = 0x0000000011000000,

    AND32       = 0x0000000020000000,
    OR32        = 0x0000000021000000,
    XOR32       = 0x0000000022000000,
    NOT32       = 0x0000000023000000,
    NAND32      = 0x0000000024000000,
    NOR32       = 0x0000000025000000,
    XNOR32      = 0x0000000026000000,
    SHL32       = 0x0000000027000000,
    SHR32       = 0x0000000028000000,

    ADD32       = 0x0000000030000000,
    SADD32      = 0x0000000031000000,
    SUB32       = 0x0000000032000000,
    SSUB32      = 0x0000000033000000,
    MUL32       = 0x0000000034000000,
    SMUL32      = 0x0000000035000000,
    DIV32       = 0x0000000036000000,
    SDIV32      = 0x0000000037000000,
    MOD32       = 0x0000000038000000,
    SMOD32      = 0x0000000039000000,
    INC32       = 0x000000003A000000,
    DEC32       = 0x000000003B000000,

    CMP32       = 0x0000000040000000,
} opcode_32b;

typedef enum
{
    NOP         = 0x0000000000000000,
    HLT         = 0x01F00000000000000,

    MOV64_RR    = 0x1000000000000000,
    MOV64_IR    = 0x1100000000000000,

    AND64       = 0x2000000000000000,
    OR64        = 0x2100000000000000,
    XOR64       = 0x2200000000000000,
    NOT64       = 0x2300000000000000,
    NAND64      = 0x2400000000000000,
    NOR64       = 0x2500000000000000,
    XNOR64      = 0x2600000000000000,
    SHL64       = 0x2700000000000000,
    SHR64       = 0x2800000000000000,

    ADD64       = 0x3000000000000000,
    SADD64      = 0x3100000000000000,
    SUB64       = 0x3200000000000000,
    SSUB64      = 0x3300000000000000,
    MUL64       = 0x3400000000000000,
    SMUL64      = 0x3500000000000000,
    DIV64       = 0x3600000000000000,
    SDIV64      = 0x3700000000000000,
    MOD64       = 0x3800000000000000,
    SMOD64      = 0x3900000000000000,
    INC64       = 0x3A00000000000000,
    DEC64       = 0x3B00000000000000,

    CMP64       = 0x4000000000000000,
    JMP         = 0x4100000000000000,
    JE          = 0x4200000000000000,
    JNE         = 0x4300000000000000,
    JZ          = 0x4400000000000000,
    JNZ         = 0x4500000000000000,
    JL          = 0x4600000000000000,
    JLE         = 0x4700000000000000,
    JG          = 0x4800000000000000,
    JGE         = 0x4900000000000000,
} opcode_64b;

#endif // INSTRUCTION_SET_H